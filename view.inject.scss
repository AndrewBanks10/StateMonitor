$single-gray-border: 1px solid #c0c0c0;
$lightGreen: RGB(137,209,133);
$containerHeight: 300px;
$containerWidth: 200px;
$keyColor: RGB(184, 218, 255);
$valuecolor: RGB(252, 248, 199);

.noselect {
    -webkit-touch-callout: none; /* iOS Safari */
      -webkit-user-select: none; /* Safari */
       -khtml-user-select: none; /* Konqueror HTML */
         -moz-user-select: none; /* Firefox */
          -ms-user-select: none; /* Internet Explorer/Edge */
              user-select: none; /* Non-prefixed version, currently
                                    supported by Chrome and Opera */
  }

.containerBase {
    @extend .noselect;
    right:0;
    height:$containerHeight;
    position:fixed;
    top: 50%;
    transform: translateY(-50%);
    font-size: 10px;
    border-radius: 6px;
    padding:2px;
    border: $single-gray-border; 
    box-sizing: border-box;  
    display: flex;
    flex-direction: column;
    width:$containerWidth;  
    font-family: Arial;
}

.containerBackgroundBase {
    position:fixed;
    left: 0px;
    top: 0px;
    height: 100%;
    width: 100%;
    background-color: transparent;
}

.displayModuleContainerBackground {
    @extend .containerBackgroundBase;
    z-index:101;
}

.displayModuleContainer {
    @extend .containerBase;
    width: 300px;
    color:white;
    background:black;
    z-index:102;
}

.monitorContainerBackground {
    @extend .containerBackgroundBase;
    z-index:100;
}

.monitorContainer {
    @extend .containerBase;
    background:black;
    color:white;
    z-index:99;
}

.monitorContentContainer {
    clear: both;
    overflow:auto;
}

.dataRow {
    background: transparent;
    font-size: 10px;  
    padding:0px; 
    color:white; 
    cursor:default;
}

.dataRow:nth-child(even) {
    background: transparent;
}
  
.dataRowOn {
    @extend .dataRow;
    background-color: $lightGreen;
    color:black;
}

.dataRowOn:nth-child(even) {
    background-color: $lightGreen
}

.dataColumn {
    border: 1px solid #707070;
    padding:2px;  
}

.buttonContainer {
    padding:4px; 
    float:left;  
}

.transitionButton {
    float:left;
    font-size:18px;
    color:$lightGreen;
    cursor:default;
    padding-left:10px; 
    padding-right:10px;
    padding-top:0px;
    padding-bottom:3px;   
}

.transitionStopButton {
    @extend .transitionButton;
    color:darkorange;
}

.transitionReplayButton {
    @extend .transitionButton;
    color:RGB(117,190,255);
    padding-top:3px;
    padding-left:4px;
}

.transitionExitButton {
    @extend .transitionButton;
    float: right;
    color:white;
}

.transitionMinimizeButton {
    @extend .transitionButton;
    font-weight:bold;
    color:white;
    padding-top:3px;
    padding-right:12px;
}

.maximizeButton {
    cursor:default;
    right:0;
    bottom:0;
    background:black;
    height:21px;
    width:21px;
    z-index:9999;
    position:fixed;
    color:white;
    font-size: 24px;
    font-weight: bold;
    border-radius: 6px;
    border: $single-gray-border; 
    box-sizing: border-box; 
}

.maximizeChar {
    margin-top:-7px;
    margin-left:2px;
}

.stateDetailTitle {
    color: orange;
    float: left;
    font-size:16px;
    font-weight: bold;
    margin-top: 4px;
    margin-left: 2px;
}

.displayStateObjectContainer {
    margin-top:6px;
    overflow: auto;
    padding: 2px;
    font-size: 11px;
    border: $single-gray-border; 
}

.stateDetailKey {
    padding-bottom: 3px;
}

.displayModuleText {
    font-weight: normal;
    font-size: 11px;
    padding-top: 4px;
    word-wrap: break-word;
    color: $keyColor
}

.displayModuleTextValue {
    color: $valuecolor;
}

.keyValue {
    color: $keyColor;
    padding-right: 2px;
}

.basicValue {
    color: RGB(255, 255, 255);    
}

.complexKey {
    color: $keyColor;
    float: left;
    margin-top:1px; 
    padding-right: 2px;
}

.complexOpenClose {
    color: orange;
    font-size: 14px;
    cursor: pointer;
    margin-top: 0px;
}

.complexValue {
    color: $valuecolor;
    float: left;  
}

.floatClear {
    clear: both;
}
